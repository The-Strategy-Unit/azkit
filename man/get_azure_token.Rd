% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_azure_token.R
\name{get_azure_token}
\alias{get_azure_token}
\title{Get Azure authentication token}
\usage{
get_azure_token(
  resource = "https://storage.azure.com",
  managed_resource = "https://management.azure.com",
  tenant = "organizations",
  client_id = NULL,
  auth_method = "authorization_code",
  force_refresh = FALSE,
  ...
)
}
\arguments{
\item{resource}{A string specifying the URL of the Azure resource for which
the token is requested. Defaults to \code{"https://storage.azure.com"}.}

\item{managed_resource}{A string specifying the URL of the managed Azure
resource for which the token is requested. Defaults to
\code{"https://management.azure.com"}.}

\item{tenant}{A string specifying the Azure tenant. Defaults to
\code{"organizations"}. See \code{?AzureAuth::get_azure_token} for other values.}

\item{client_id}{A string specifying the application ID (client ID). If
\code{NULL}, (the default) the function attempts to obtain the client ID from the
Azure Resource Manager token, or prompts the user to log in to obtain it.}

\item{auth_method}{A string specifying the authentication method. Defaults to
\code{"authorization_code"}. See \code{?AzureAuth::get_azure_token} for other values.}

\item{force_refresh}{Boolean: whether to use a stored token if available
(\code{FALSE}, the default), or try to obtain a new one from Azure (\code{TRUE}).
This may be useful if you wish to generate a new token with the same
\code{resource} value as an existing token, but a different \code{tenant} or
\code{auth_method}.}

\item{...}{Optional arguments (\code{token_args} or \code{use_cache}) to be passed on
to \code{AzureAuth::get_managed_token()}.}
}
\value{
An Azure token object
}
\description{
#' \ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
This function retrieves an Azure token for a specified resource.
}
\details{
If the environment variables \code{AZ_TENANT_ID}, \code{AZ_CLIENT_ID} and
\code{AZ_APP_SECRET} are all set, it will try to use these to return a token.

Otherwise it will try to get a managed token from a managed resource such as
Azure VM or Azure App Service.

If neither of these approaches has returned a token, it will try to retrieve
a user token using the provided parameters, requiring the user to have
authenticated using their device.
}
\examples{
\dontrun{
# Get a token for the default resource
token <- get_azure_token()

# Get a token for a specific resource and tenant
token <- get_azure_token(
 resource = "https://graph.microsoft.com",
 tenant = "my-tenant-id"
)

# Get a token using a specific app ID
token <- get_azure_token(client_id = "my-app-id")
}
}
